/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package praktikum3;
import java.awt.Color;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.Image;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.WritableRaster;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;



/**
 *
 * @author user
 */
public class grayscle extends javax.swing.JFrame {
String sumber;
 BufferedImage gambar;
 Image gambarhasil;
 int ukuranX;
 int ukuranY;
 String gb1 = "Grafik Histogram";
    /**
     * Creates new form grayscle
     */
    public grayscle() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Linput = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Loutput = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Linput, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Linput, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Loutput, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Loutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setText("Citra Input");

        jLabel2.setText("Citra Output");

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Preprocessing");

        jMenuItem2.setText("Gray Scale ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("View");

        jMenuItem4.setText("Histogram");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
public static BufferedImage loadImage(String ref) {
 BufferedImage bimg = null;
 try {
 bimg = ImageIO.read(new File(ref));
 } catch (Exception e) {
 e.printStackTrace();
 }
 return bimg;
 }
// Deklarasi Methode untuk menyesuaikan ukuran gambar dengan ukuran jLabel
public static BufferedImage resize(BufferedImage img,
 int newW, int newH) {
 int w = img.getWidth();
 int h = img.getHeight();
 BufferedImage dimg = new BufferedImage(newW, newH,
 img.getType());
 Graphics2D g = dimg.createGraphics();
 g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
 RenderingHints.VALUE_INTERPOLATION_BILINEAR);
 g.drawImage(img, 0, 0, newW, newH, 0, 0, w, h, null);
 g.dispose();
 return dimg;
}
public BufferedImage rgb2Gray(String sumber) {
 BufferedImage prosesGambar;
 BufferedImage loadIng = loadImage(sumber);
 ukuranX = loadIng.getWidth();
 ukuranY = loadIng.getHeight();
 prosesGambar = new BufferedImage(ukuranX, ukuranY,
 BufferedImage.TYPE_BYTE_GRAY);
 Graphics g = prosesGambar.getGraphics();
 g.drawImage(loadIng, 0, 0, null);
 WritableRaster raster = prosesGambar.getRaster();
 for (int x = 0; x < ukuranX; x++) {
 for (int y = 0; y < ukuranY; y++) {
 int rgb = loadIng.getRGB(x, y);
// int alpha = (rgb << 24) & 0xff;
 int merahg = (rgb >> 16) & 0xff;
 int hijaug = (rgb >> 8) & 0xff;
 int birug = (rgb >> 0) & 0xff;
 float gray = (float)((0.5*merahg) + (0.3*hijaug) + (0.2*birug));
 raster.setSample(x, y, 0, gray);
 }
 }
 return prosesGambar;
 }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
 int open = fc.showOpenDialog(jPanel1);
 if (open == JFileChooser.APPROVE_OPTION) {
 sumber = fc.getSelectedFile().getPath();
 BufferedImage loadImg = loadImage(sumber);
 int x = Linput.getWidth(); int y = Linput.getHeight();
 int x1 = Loutput.getWidth(); int y1 = Loutput.getHeight();
 ImageIcon imageIcon1 = new ImageIcon(resize(loadImg, x, y));
 ImageIcon imageIcon2 = new ImageIcon(resize(loadImg, x1, y1));
 Linput.setIcon(imageIcon1);
 Loutput.setIcon(imageIcon2);
 } 
    }                                          

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        BufferedImage grayscale = rgb2Gray(sumber);
 int x = Loutput.getWidth();
 int y = Loutput.getHeight();
 ImageIcon imageIcon = new ImageIcon(resize(grayscale, x, y));
 Loutput.setIcon(imageIcon);
    }                                          

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        System.exit(0);

    }                                          

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        BufferedImage loadImg = loadImage(sumber);
 drawHistogram(loadImg, gb1);

    }                                          
public void drawHistogram(BufferedImage gmbar, String hs1) {
 int widht = gmbar.getWidth();
 int height = gmbar.getHeight();
 int count[][] = new int[4][0x100];
 int RED = 0;
 int BLUE = 1;
 int GREEN = 2;
 
 for (int x = 0; x < widht; x++) {
 for (int y = 0; y < height; y++) {
 int rgb = gmbar.getRGB(x, y);
 int merahg = (rgb & 0x00ff0000) >> 16;
 int hijaug = (rgb & 0x0000ff00) >> 8;
 int birug = (rgb & 0x000000ff);
 int gray = (merahg + hijaug + birug) / 3;
 count[RED][merahg]++;
 count[GREEN][hijaug]++;
 count[BLUE][birug]++;
 count[3][gray]++;
 }
 }
 DefaultCategoryDataset dataset = new DefaultCategoryDataset();
 for (int f = 0; f < 0x100; f++) {
 dataset.addValue(count[0][f], "Red", new Integer(f));
 dataset.addValue(count[2][f], "Blue", new Integer(f));
 dataset.addValue(count[1][f], "Green", new Integer(f));
 dataset.addValue(count[3][f], "Black", new Integer(f));
 }
 JFreeChart histo = ChartFactory.createBarChart("Histogram Citra",
"Nilai","Frekuensi", dataset, PlotOrientation.VERTICAL, true, false, false);
 ChartFrame frame = new ChartFrame("histogram Citra", histo);
 histo.setBackgroundPaint(Color.white);
 final CategoryPlot plot = (CategoryPlot) histo.getPlot();
 plot.setBackgroundPaint(Color.WHITE);
 plot.setRangeMinorGridlinePaint(Color.white);
 frame.setSize(500, 350);
 frame.setVisible(true);
 frame.setLocation(380, 200);
 frame.setTitle(hs1);
 String status = frame.getTitle();
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(grayscle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(grayscle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(grayscle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(grayscle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new grayscle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Linput;
    private javax.swing.JLabel Loutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration                   
}
